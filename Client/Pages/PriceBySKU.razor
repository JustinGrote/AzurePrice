@page "/pricebyvmsize"
@inject HttpClient Http
@using Blazorise.DataGrid
@using System.Collections.Generic

<h1>Azure Spot VM Price</h1>

<h3>Sku</h3>
<SelectList Data="@skus"
    TextField="@((item)=>item)"
    ValueField="@((item)=>item)"
    SelectedValue="@currentSku"
    SelectedValueChanged="@SkuSelectHandler" 
/>

<DataGrid 
    TItem=Price
    ShowPager=true
    PageSize=10
    Striped=true
    Filterable=true
    Data=@priceList
    >
    <DataGridColumn Caption="Location"
        TItem=Price
        Field=@nameof(Price.ArmRegionName)
        Readonly=true
    />
    <DataGridNumericColumn Caption="Discount"
        TItem=Price
        Field=@nameof(Price.Discount)
        Readonly=true>
        <DisplayTemplate>
            @(
                context.Discount.ToString("P1")
            )
        </DisplayTemplate>
    </DataGridNumericColumn>
    <DataGridNumericColumn Caption="Price/hr"
        TItem=Price
        Field=@nameof(Price.UnitPrice)
        Readonly=true>
        <DisplayTemplate>
            @(
                context.UnitPriceDollars
            )
        </DisplayTemplate>
    </DataGridNumericColumn>
    <DataGridNumericColumn Caption="Price/day"
        TItem=Price
        Field=@nameof(Price.UnitPrice)
        Readonly=true>
        <DisplayTemplate>
            @(
                context.UnitPriceDailyDollars
            )
        </DisplayTemplate>
    </DataGridNumericColumn>
    <DataGridNumericColumn Caption="Price/wk"
        TItem=Price
        Field=@nameof(Price.UnitPrice)
        Readonly=true>
        <DisplayTemplate>
            @(
                context.UnitPriceWeeklyDollars
            )
        </DisplayTemplate>
    </DataGridNumericColumn>
    <DataGridNumericColumn Caption="Price/mo"
        TItem=Price
        Field=@nameof(Price.UnitPrice)
        Readonly=true>
        <DisplayTemplate>
            @(
                context.UnitPriceMonthlyDollars
            )
        </DisplayTemplate>
    </DataGridNumericColumn>
    <DataGridNumericColumn Caption="Retail"
        TItem=Price
        Field=@nameof(Price.RetailPrice)
        Readonly=true>
        <DisplayTemplate>
            @(
                context.RetailPrice.ToString("C6")
            )
        </DisplayTemplate>
    </DataGridNumericColumn>
    <DataGridDateColumn Caption="Last Changed"
        TItem=Price
        Field=@nameof(Price.EffectiveStartDate)
        Readonly=true
    />
</DataGrid>

@code {
    private PriceClient client;
    private List<string> skus = new List<string> { "Basic_A0", "Basic_A1", "Basic_A2", "Basic_A3", "Basic_A4", "Standard_A0", "Standard_A1", "Standard_A1_v2", "Standard_A10", "Standard_A11", "Standard_A2", "Standard_A2_v2", "Standard_A2m_v2", "Standard_A3", "Standard_A4", "Standard_A4_v2", "Standard_A4m_v2", "Standard_A5", "Standard_A6", "Standard_A7", "Standard_A8", "Standard_A8_v2", "Standard_A8m_v2", "Standard_A9", "Standard_D1", "Standard_D1_v2", "Standard_D11", "Standard_D11_v2", "Standard_D12", "Standard_D12_v2", "Standard_D13", "Standard_D13_v2", "Standard_D14", "Standard_D14_v2", "Standard_D15_v2", "Standard_D16_v3", "Standard_D16_v4", "Standard_D16a_v4", "Standard_D16as_v4", "Standard_D16d_v4", "Standard_D16ds_v4", "Standard_D16s_v3", "Standard_D16s_v4", "Standard_D2", "Standard_D2_v2", "Standard_D2_v3", "Standard_D2_v4", "Standard_D2a_v4", "Standard_D2as_v4", "Standard_D2d_v4", "Standard_D2ds_v4", "Standard_D2s_v3", "Standard_D2s_v4", "Standard_D3", "Standard_D3_v2", "Standard_D32_v3", "Standard_D32_v4", "Standard_D32a_v4", "Standard_D32as_v4", "Standard_D32d_v4", "Standard_D32ds_v4", "Standard_D32s_v3", "Standard_D32s_v4", "Standard_D4", "Standard_D4_v2", "Standard_D4_v3", "Standard_D4_v4", "Standard_D48_v3", "Standard_D48_v4", "Standard_D48a_v4", "Standard_D48as_v4", "Standard_D48d_v4", "Standard_D48ds_v4", "Standard_D48s_v3", "Standard_D48s_v4", "Standard_D4a_v4", "Standard_D4as_v4", "Standard_D4d_v4", "Standard_D4ds_v4", "Standard_D4s_v3", "Standard_D4s_v4", "Standard_D5_v2", "Standard_D64_v3", "Standard_D64_v4", "Standard_D64a_v4", "Standard_D64as_v4", "Standard_D64d_v4", "Standard_D64ds_v4", "Standard_D64s_v3", "Standard_D64s_v4", "Standard_D8_v3", "Standard_D8_v4", "Standard_D8a_v4", "Standard_D8as_v4", "Standard_D8d_v4", "Standard_D8ds_v4", "Standard_D8s_v3", "Standard_D8s_v4", "Standard_D96a_v4", "Standard_D96as_v4", "Standard_DC1s_v2", "Standard_DC2s", "Standard_DC2s_v2", "Standard_DC4s", "Standard_DC4s_v2", "Standard_DC8_v2", "Standard_DS1", "Standard_DS1_v2", "Standard_DS11", "Standard_DS11_v2", "Standard_DS11-1_v2", "Standard_DS12", "Standard_DS12_v2", "Standard_DS12-1_v2", "Standard_DS12-2_v2", "Standard_DS13", "Standard_DS13_v2", "Standard_DS13-2_v2", "Standard_DS13-4_v2", "Standard_DS14", "Standard_DS14_v2", "Standard_DS14-4_v2", "Standard_DS14-8_v2", "Standard_DS15_v2", "Standard_DS2", "Standard_DS2_v2", "Standard_DS3", "Standard_DS3_v2", "Standard_DS4", "Standard_DS4_v2", "Standard_DS5_v2", "Standard_E16_v3", "Standard_E16_v4", "Standard_E16-4ds_v4", "Standard_E16-4s_v3", "Standard_E16-4s_v4", "Standard_E16-8ds_v4", "Standard_E16-8s_v3", "Standard_E16-8s_v4", "Standard_E16a_v4", "Standard_E16as_v4", "Standard_E16d_v4", "Standard_E16ds_v4", "Standard_E16s_v3", "Standard_E16s_v4", "Standard_E2_v3", "Standard_E2_v4", "Standard_E20_v3", "Standard_E20_v4", "Standard_E20a_v4", "Standard_E20as_v4", "Standard_E20d_v4", "Standard_E20ds_v4", "Standard_E20s_v3", "Standard_E20s_v4", "Standard_E2a_v4", "Standard_E2as_v4", "Standard_E2d_v4", "Standard_E2ds_v4", "Standard_E2s_v3", "Standard_E2s_v4", "Standard_E32_v3", "Standard_E32_v4", "Standard_E32-16ds_v4", "Standard_E32-16s_v3", "Standard_E32-16s_v4", "Standard_E32-8ds_v4", "Standard_E32-8s_v3", "Standard_E32-8s_v4", "Standard_E32a_v4", "Standard_E32as_v4", "Standard_E32d_v4", "Standard_E32ds_v4", "Standard_E32s_v3", "Standard_E32s_v4", "Standard_E4_v3", "Standard_E4_v4", "Standard_E4-2ds_v4", "Standard_E4-2s_v3", "Standard_E4-2s_v4", "Standard_E48_v3", "Standard_E48_v4", "Standard_E48a_v4", "Standard_E48as_v4", "Standard_E48d_v4", "Standard_E48ds_v4", "Standard_E48s_v3", "Standard_E48s_v4", "Standard_E4a_v4", "Standard_E4as_v4", "Standard_E4d_v4", "Standard_E4ds_v4", "Standard_E4s_v3", "Standard_E4s_v4", "Standard_E64_v3", "Standard_E64_v4", "Standard_E64-16ds_v4", "Standard_E64-16s_v3", "Standard_E64-16s_v4", "Standard_E64-32ds_v4", "Standard_E64-32s_v3", "Standard_E64-32s_v4", "Standard_E64a_v4", "Standard_E64as_v4", "Standard_E64d_v4", "Standard_E64ds_v4", "Standard_E64i_v3", "Standard_E64is_v3", "Standard_E64s_v3", "Standard_E64s_v4", "Standard_E8_v3", "Standard_E8_v4", "Standard_E8-2ds_v4", "Standard_E8-2s_v3", "Standard_E8-2s_v4", "Standard_E8-4ds_v4", "Standard_E8-4s_v3", "Standard_E8-4s_v4", "Standard_E8a_v4", "Standard_E8as_v4", "Standard_E8d_v4", "Standard_E8ds_v4", "Standard_E8s_v3", "Standard_E8s_v4", "Standard_E96a_v4", "Standard_E96as_v4", "Standard_F1", "Standard_F16", "Standard_F16s", "Standard_F16s_v2", "Standard_F1s", "Standard_F2", "Standard_F2s", "Standard_F2s_v2", "Standard_F32s_v2", "Standard_F4", "Standard_F48s_v2", "Standard_F4s", "Standard_F4s_v2", "Standard_F64s_v2", "Standard_F72s_v2", "Standard_F8", "Standard_F8s", "Standard_F8s_v2", "Standard_G1", "Standard_G2", "Standard_G3", "Standard_G4", "Standard_G5", "Standard_GS1", "Standard_GS2", "Standard_GS3", "Standard_GS4", "Standard_GS4-4", "Standard_GS4-8", "Standard_GS5", "Standard_GS5-16", "Standard_GS5-8", "Standard_H16", "Standard_H16m", "Standard_H16mr", "Standard_H16r", "Standard_H8", "Standard_H8m", "Standard_HB120rs_v2", "Standard_HB60rs", "Standard_HC44rs", "Standard_L16s", "Standard_L16s_v2", "Standard_L32s", "Standard_L32s_v2", "Standard_L48s_v2", "Standard_L4s", "Standard_L64s_v2", "Standard_L80s_v2", "Standard_L8s", "Standard_L8s_v2", "Standard_M128", "Standard_M128-32ms", "Standard_M128-64ms", "Standard_M128m", "Standard_M128ms", "Standard_M128s", "Standard_M16-4ms", "Standard_M16-8ms", "Standard_M16ms", "Standard_M208ms_v2", "Standard_M208s_v2", "Standard_M32-16ms", "Standard_M32-8ms", "Standard_M32ls", "Standard_M32ms", "Standard_M32ts", "Standard_M416-208ms_v2", "Standard_M416-208s_v2", "Standard_M416ms_v2", "Standard_M416s_v2", "Standard_M64", "Standard_M64-16ms", "Standard_M64-32ms", "Standard_M64ls", "Standard_M64m", "Standard_M64ms", "Standard_M64s", "Standard_M8-2ms", "Standard_M8-4ms", "Standard_M8ms", "Standard_NC12", "Standard_NC12s_v2", "Standard_NC12s_v3", "Standard_NC24", "Standard_NC24r", "Standard_NC24rs_v2", "Standard_NC24rs_v3", "Standard_NC24s_v2", "Standard_NC24s_v3", "Standard_NC6", "Standard_NC6s_v2", "Standard_NC6s_v3", "Standard_ND12s", "Standard_ND24rs", "Standard_ND24s", "Standard_ND40rs_v2", "Standard_ND40s_v3", "Standard_ND6s", "Standard_NP10s", "Standard_NP20s", "Standard_NP40s", "Standard_NV12", "Standard_NV12s_v2", "Standard_NV12s_v3", "Standard_NV16as_v4", "Standard_NV24", "Standard_NV24s_v2", "Standard_NV24s_v3", "Standard_NV32as_v4", "Standard_NV48s_v3", "Standard_NV4as_v4", "Standard_NV6", "Standard_NV6s_v2", "Standard_NV8as_v4", "Standard_PB6s" };
    private List<Price> priceList; 
    private object currentSku = "Standard_D2s_v4";
        //DataGrid Stuff

    async Task<List<Price>> GetSpotPricesBySku(string sku) {
        var spotQuery = new ODataQuery<Price>($"armSkuName eq '{sku}' and armRegionName ne 'Global'");
        var spotPriceFetch = client.GetSpotPrices(spotQuery, 1);

        var retailQuery = new ODataQuery<Price>($"armSkuName eq '{sku}' and armRegionName ne 'Global'");
        var retailPriceFetch = client.GetRetailPrices(retailQuery, 1);

        var taskResult = await Task.WhenAll(spotPriceFetch,retailPriceFetch);

        var spotPrices = spotPriceFetch.Result;
        var retailPrices = retailPriceFetch.Result;

        foreach (Price spotPriceItem in spotPrices) {
            try {
                spotPriceItem.RetailPrice = retailPrices.Single<Price>(priceItem => priceItem.ArmRegionName == spotPriceItem.ArmRegionName).RetailPrice;
            } catch (InvalidOperationException) {}
        }
        return spotPrices.OrderByDescending(price=>price.Discount).ToList();
    }

    async Task SkuSelectHandler( object newValue )
    {
        currentSku = newValue;
        priceList = await GetSpotPricesBySku(currentSku.ToString());
    }

    protected override async Task OnInitializedAsync()
    {
        //FIXME: Abstract this to a new function when I learn how
        client = new PriceClient(Http);
        priceList = await GetSpotPricesBySku(currentSku.ToString());
    }
}
